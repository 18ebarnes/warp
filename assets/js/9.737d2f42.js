(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{373:function(t,e,a){t.exports=a.p+"assets/img/CEMBA.d7b3cab5.png"},398:function(t,e,a){"use strict";a.r(e);var r=a(19),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"cemba-overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cemba-overview"}},[t._v("#")]),t._v(" CEMBA Overview")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"center"}},[t._v("Pipeline Version")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Date Updated")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Documentation Author")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Questions or Feedback")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/broadinstitute/warp/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("CEMBA_v1.0.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("July 28, 2020")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"mailto:ekiernan@broadinstitute.org"}},[t._v("Elizabeth Kiernan")])]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Please file GitHub issues in warp or contact "),r("a",{attrs:{href:"mailto:kdegatano@broadinstitute.org"}},[t._v("Kylee Degatano")])])])])]),t._v(" "),r("p",[r("img",{attrs:{src:a(373),alt:"CEMBA"}})]),t._v(" "),r("h2",{attrs:{id:"introduction-to-the-cemba-workflow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-the-cemba-workflow"}},[t._v("#")]),t._v(" Introduction to the CEMBA Workflow")]),t._v(" "),r("p",[t._v("CEMBA is a pipeline developed by the "),r("a",{attrs:{href:"https://braininitiative.nih.gov/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BRAIN Initiative"),r("OutboundLink")],1),t._v(" that supports processing of multiplexed single-nuclei bisulfite sequencing data. It is an alignment and methylated base calling pipeline that trims adaptors, attaches cell barcodes, aligns reads to the genome, filters reads based on quality and creates a VCF with methylation-site coverage.")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[t._v("Interested in using the pipeline for your publication? See the "),r("RouterLink",{attrs:{to:"/documentation/Pipelines/CEMBA_MethylC_Seq_Pipeline/CEMBA.methods.html"}},[t._v("“CEMBA publication methods”")]),t._v(' for a generic "methods" style description of the pipeline.')],1)]),t._v(" "),r("h2",{attrs:{id:"quick-start-table"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#quick-start-table"}},[t._v("#")]),t._v(" Quick Start Table")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Pipeline Features")]),t._v(" "),r("th",[t._v("Description")]),t._v(" "),r("th",[t._v("Source")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("Assay Type")]),t._v(" "),r("td",[t._v("Single-nucleus methylcytosine sequencing (snmC-seq)")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://science.sciencemag.org/content/357/6351/600/tab-pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Luo et al. 2017"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Overall Workflow")]),t._v(" "),r("td",[t._v("Aligns reads and identifies methylated bases")]),t._v(" "),r("td",[t._v("Code available from "),r("a",{attrs:{href:"CEMBA.wdl"}},[t._v("Github")])])]),t._v(" "),r("tr",[r("td",[t._v("Workflow Language")]),t._v(" "),r("td",[t._v("WDL 1.0")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/openwdl/wdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("openWDL"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Genomic Reference Sequence")]),t._v(" "),r("td",[t._v("GRCH38 and GRCM38")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://www.gencodegenes.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GENCODE"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Aligner")]),t._v(" "),r("td",[t._v("BISMARK v0.21.0 with  --bowtie2")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://www.bioinformatics.babraham.ac.uk/projects/bismark/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bismark"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Varariant Caller")]),t._v(" "),r("td",[t._v("GATK 4.1.2.0")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://gatk.broadinstitute.org/hc/en-us",target:"_blank",rel:"noopener noreferrer"}},[t._v("GATK 4.1.2.0"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Data Input File Format")]),t._v(" "),r("td",[t._v("File format in which sequencing data is provided")]),t._v(" "),r("td",[r("a",{attrs:{href:"https://support.illumina.com/bulletins/2016/04/fastq-files-explained.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Zipped FASTQs (.fastq.gz)"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",[t._v("Data Output File Format")]),t._v(" "),r("td",[t._v("File formats in which CEMBA output is provided")]),t._v(" "),r("td",[r("a",{attrs:{href:"http://samtools.github.io/hts-specs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BAM"),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("VCF"),r("OutboundLink")],1)])])])]),t._v(" "),r("h1",{attrs:{id:"set-up"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#set-up"}},[t._v("#")]),t._v(" Set-up")]),t._v(" "),r("h2",{attrs:{id:"cemba-installation-and-requirements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cemba-installation-and-requirements"}},[t._v("#")]),t._v(" CEMBA Installation and Requirements")]),t._v(" "),r("p",[t._v("The CEMBA pipeline code is written in the "),r("a",{attrs:{href:"https://openwdl.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Workflow Description Language (WDL)"),r("OutboundLink")],1),t._v(" and can be downloaded by cloning the GitHub repository "),r("a",{attrs:{href:"https://github.com/broadinstitute/warp",target:"_blank",rel:"noopener noreferrer"}},[t._v("WARP"),r("OutboundLink")],1),t._v('. For the latest release of CEMBA, please see the release tags prefixed with "CEMBA" '),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),r("OutboundLink")],1),t._v(". CEMBA can be deployed using "),r("a",{attrs:{href:"https://github.com/broadinstitute/cromwell",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cromwell"),r("OutboundLink")],1),t._v(", a GA4GH compliant, flexible workflow management system that supports multiple computing platforms.")]),t._v(" "),r("p",[t._v("The workflow can also be run on Terra using the "),r("a",{attrs:{href:"https://app.terra.bio/#workspaces/brain-initiative-bcdc/Methyl-c-seq_Pipeline",target:"_blank",rel:"noopener noreferrer"}},[t._v("Methyl-c-seq_Pipeline workspace"),r("OutboundLink")],1),t._v(". This workspace contains the CEMBA workflow, workflow configurations, required reference data and other inputs, and demultiplexed example testing data.")]),t._v(" "),r("h2",{attrs:{id:"inputs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),r("p",[t._v("CEMBA pipeline inputs are detailed in the example human configuration file ("),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/cemba/cemba_methylcseq/example_inputs/CEMBA.inputs.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("CEMBA.inputs.json"),r("OutboundLink")],1),t._v("). Genomic reference files were built using the "),r("a",{attrs:{href:"https://github.com/BICCN/CEMBA/blob/master/pipelines/build_cemba_references/BuildCembaReferences.wdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("BuildCembaReferencesWDL script"),r("OutboundLink")],1),t._v(". See descriptions of all inputs in the tables below.")]),t._v(" "),r("h3",{attrs:{id:"sample-data-input"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sample-data-input"}},[t._v("#")]),t._v(" Sample data input")]),t._v(" "),r("p",[t._v("The pipeline accepts paired-end reads in the form of two compressed FASTQ files (fastq.gz). FASTQ files may represent a single cell sample or in the case of multiplexed samples, multiple cells.")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Parameter Name")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("fastq_r1_gzipped_input")]),t._v(" "),r("td",[t._v("Compressed FASTQ (.gz) for R1")])]),t._v(" "),r("tr",[r("td",[t._v("fastq_r2_gzipped_input")]),t._v(" "),r("td",[t._v("Compressed FASTQ (.gz) for R2")])])])]),t._v(" "),r("h3",{attrs:{id:"additional-inputs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#additional-inputs"}},[t._v("#")]),t._v(" Additional Inputs")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Parameter Name")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("barcode_white_list")]),t._v(" "),r("td",[t._v("List of known cell barcodes from")])]),t._v(" "),r("tr",[r("td",[t._v("output_base_sample_name")]),t._v(" "),r("td",[t._v("Prefix for all pipeline output files (final and intermediate)")])]),t._v(" "),r("tr",[r("td",[t._v("barcode_start_pos")]),t._v(" "),r("td",[t._v("Base location of barcode start")])]),t._v(" "),r("tr",[r("td",[t._v("barcode_length")]),t._v(" "),r("td",[t._v("Length of cell barcode (bp)")])]),t._v(" "),r("tr",[r("td",[t._v("reference_fasta")]),t._v(" "),r("td",[t._v("Reference FASTA")])]),t._v(" "),r("tr",[r("td",[t._v("reference_fasta_index")]),t._v(" "),r("td",[t._v("Reference FASTA index")])]),t._v(" "),r("tr",[r("td",[t._v("fwd_converted_reference_fasta")]),t._v(" "),r("td",[t._v("Bisulfite-converted forward reference genome reads for Bismark alignment")])]),t._v(" "),r("tr",[r("td",[t._v("rev_converted_reference_fasta")]),t._v(" "),r("td",[t._v("Bisulfite-converted reverse reference genome reads for Bismark alignment")])]),t._v(" "),r("tr",[r("td",[t._v("reference_dictionary")]),t._v(" "),r("td",[t._v("Reference genome dictionary")])]),t._v(" "),r("tr",[r("td",[t._v("fwd_bowtie2_index_files")]),t._v(" "),r("td",[t._v("Forward bowtie2 index files")])]),t._v(" "),r("tr",[r("td",[t._v("rev_bowtie2_index_files")]),t._v(" "),r("td",[t._v("Reverse bowtie2 index files")])]),t._v(" "),r("tr",[r("td",[t._v("quality_cutoff")]),t._v(" "),r("td",[t._v("Interval representing the number of base pairs to remove from 5’ and 3’ end in order to trim low quality reads")])]),t._v(" "),r("tr",[r("td",[t._v("min_length_paired_end_trim")]),t._v(" "),r("td",[t._v("An interval to specify a minimum read length to avoid empty reads in paired-end mode")])]),t._v(" "),r("tr",[r("td",[t._v("min_length_single_end_trim")]),t._v(" "),r("td",[t._v("An interval to specify a minimum read length to avoid empty reads in single-end mode")])]),t._v(" "),r("tr",[r("td",[t._v("read1_adapter_seq")]),t._v(" "),r("td",[t._v("The R1 adaptor sequence")])]),t._v(" "),r("tr",[r("td",[t._v("read2_adapter_seq")]),t._v(" "),r("td",[t._v("The R2 adaptor sequence")])]),t._v(" "),r("tr",[r("td",[t._v("cut_length")]),t._v(" "),r("td",[t._v("Interval provided to trim degenerate bases, random primer indexes and Adaptase C/T tail")])]),t._v(" "),r("tr",[r("td",[t._v("paired_end_run")]),t._v(" "),r("td",[t._v("Boolean; if true, workflow will run in paired-end mode")])]),t._v(" "),r("tr",[r("td",[t._v("remove_duplicates")]),t._v(" "),r("td",[t._v("Boolean; if true Picard will remove duplicates and report duplication removal metrics")])]),t._v(" "),r("tr",[r("td",[t._v("extract_and_attach_barcodes_in_single_end_run")]),t._v(" "),r("td",[t._v("Boolean; if true, workflow will create an unaligned BAM and extract barcodes")])]),t._v(" "),r("tr",[r("td",[t._v("min_map_quality")]),t._v(" "),r("td",[t._v("Numerical value that represents minimum map quality; if provided Samtools will filter reads and produce a BAM for reads above value and reads below value")])])])]),t._v(" "),r("h1",{attrs:{id:"cemba-tasks-and-tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cemba-tasks-and-tools"}},[t._v("#")]),t._v(" CEMBA Tasks and Tools")]),t._v(" "),r("p",[t._v("The "),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/cemba/cemba_methylcseq/CEMBA.wdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("CEMBA.wdl"),r("OutboundLink")],1),t._v(' implements the workflow by importing individual "tasks" written in the '),r("a",{attrs:{href:"https://openwdl.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("WDL script"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"cemba-task-summary"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cemba-task-summary"}},[t._v("#")]),t._v(" CEMBA Task Summary")]),t._v(" "),r("p",[t._v("The table and summary sections below detail the tasks and tools of the CEMBA pipeline; "),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/cemba/cemba_methylcseq/CEMBA.wdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("the code"),r("OutboundLink")],1),t._v(" is available through GitHub. Each task can be found in the "),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/cemba/cemba_methylcseq/CEMBA.wdl",target:"_blank",rel:"noopener noreferrer"}},[t._v("CEMBA WDL"),r("OutboundLink")],1),t._v(" If you are looking for the specific parameters of each task/tool, please see the  "),r("code",[t._v("command {}")]),t._v(" section of the WDL script.")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"left"}},[t._v("Task")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("Tool(s)")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("Purpose")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("Docker")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://cutadapt.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cutadapt v1.18"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim adaptors")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/cutadapt:1.18")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("CreateUnmappedBam")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://broadinstitute.github.io/picard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Picard v2.18.23"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Create uBAM for attaching barcodes")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/picard:2.18.23")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("ExtractCellBarcodes")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://sctools.readthedocs.io/en/latest/sctools.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sctools v0.3.4"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Use whitelist to extract barcodes and tag to uBAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/humancellatlas/secondary-analysis-sctools:v0.3.4")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://cutadapt.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cutadapt v1.18"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim degenerate bases, primer index, C/T Adaptase tail of R1")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/cutadapt:1.18")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://cutadapt.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cutadapt v1.18"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Trim bases, primer index, C/T Adaptase tail of R2")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/cutadapt:1.18")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Align")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://www.bioinformatics.babraham.ac.uk/projects/bismark/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bismark v0.21.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Map multiplexed samples as single-end with --bowtie2")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/bismark:0.21.0")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Sort")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://broadinstitute.github.io/picard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Picard v2.18.23"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Sort BAM(s) in coordinate order")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/picard:2.18.23")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("FilterDuplicates")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://broadinstitute.github.io/picard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Picard v2.18.23"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Removes duplicate reads from BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/picard:2.18.23")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Get MethylationReport")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://www.bioinformatics.babraham.ac.uk/projects/bismark/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bismark v0.21.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Produce methylation report for duplicates-filtered BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/bismark:0.21.0")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("FilterMapQuality")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"http://www.htslib.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Samtools v1.9"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Further filter duplicate-removed BAM by map quality")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/samtools:1.9")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("GetMethylationReport")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://www.bioinformatics.babraham.ac.uk/projects/bismark/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bismark v0.21.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Produce methylation report for reads above map quality and below map quality")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/bismark:0.21.0")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("AttachBarcodes")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://broadinstitute.github.io/picard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Picard v2.18.23"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Add barcodes from the tagged uBAM to the aligned BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/picard:2.18.23")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("MergeBams")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"http://www.htslib.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Samtools v.19"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Merge R1 and R2 BAM files into single BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/samtools:1.9")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("AddReadGroup")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://gatk.broadinstitute.org/hc/en-us",target:"_blank",rel:"noopener noreferrer"}},[t._v("GATK v4.1.2.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Add read groups to the merged BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("broadinstitute/gatk:4.1.2.0")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Sort")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://broadinstitute.github.io/picard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Picard v2.18.23"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Sort in coordinate order after adding read group")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/picard:2.18.23")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("IndexBam")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"http://www.htslib.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Samtools v1.9"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Index the output BAM")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/samtools:1.9")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("MethylationTypeCaller")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"https://gatk.broadinstitute.org/hc/en-us",target:"_blank",rel:"noopener noreferrer"}},[t._v("GATK v4.1.2.0"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Produce a  VCF with locus-specific methylation information")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("broadinstitute/gatk:4.1.2.0")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("ComputeCoverageDepth")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[r("a",{attrs:{href:"http://www.htslib.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Samtools v1.9"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Compute number of sites with coverage greater than 1")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("quay.io/broadinstitute/samtools:1.9")])])])]),t._v(" "),r("h3",{attrs:{id:"prior-to-running-set-up-the-workflow-for-using-multiplexed-samples"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prior-to-running-set-up-the-workflow-for-using-multiplexed-samples"}},[t._v("#")]),t._v(" Prior to running: Set-up the workflow for using multiplexed samples")]),t._v(" "),r("p",[t._v("The pipeline uses paired-end reads, but it can only perform multiplexing when running in single-end mode. If you have multiplexed samples and want to attach cell barcodes, you must run the pipeline in single-end mode. If you do not wish to attach cell barcodes, you may run in paired-end mode (even if your samples are multiplexed). You can specify single-end mode or paired-end mode using the paired_end_run boolean in the configuration file. You will also need to adjust the extract_and_attach_barcodes_in_single_end_run boolean to true if you want to attach bardcodes.")]),t._v(" "),r("h3",{attrs:{id:"_1-trim-adaptors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-trim-adaptors"}},[t._v("#")]),t._v(" 1. Trim adaptors")]),t._v(" "),r("p",[t._v("The CEMBA workflow Trim task uses Cutadapt software to remove the Read1 (R1) and Read2 (R2) adaptor sequences specified in the input configuration from the zipped R1 and R2 FASTQ files. Low quality reads are trimmed from the 5’ and 3’ ends using the interval specified in the quality_cutoff input parameter.  To avoid empty reads, a threshold for read length is set using the min_length_paired_end_trim option.")]),t._v(" "),r("h3",{attrs:{id:"_2-extract-cell-barcodes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-extract-cell-barcodes"}},[t._v("#")]),t._v(" 2. Extract cell barcodes")]),t._v(" "),r("p",[t._v("CEMBA can extract cell barcodes from multiplexed samples if the extract_and_attach_barcodes_in_single_end_run boolean is true and the samples are run in single-end mode. To do this, the workflow uses the CreateUnmappedBam and ExtractCellBarcodes tasks to first make an unaligned BAM (uBAM) for the trimmed R1 FASTQ and then tag barcodes identified with the barcode_white_list input to the uBAM.")]),t._v(" "),r("h3",{attrs:{id:"_3-trim-degenerate-bases-random-primer-indexes-and-adaptase-c-t-tail"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-trim-degenerate-bases-random-primer-indexes-and-adaptase-c-t-tail"}},[t._v("#")]),t._v(" 3. Trim degenerate bases, random primer indexes, and Adaptase C/T tail")]),t._v(" "),r("p",[t._v("After barcode extraction, the Trim task is used a second time to remove additional bases resulting from R1 random primer indexes (often used as barcodes) and the R2 C/T tail introduced by the Adaptase enzyme. Reads are trimmed using the cut_length input. The read length threshold is set by the min_length_single_end input.")]),t._v(" "),r("h3",{attrs:{id:"_4-align-to-a-reference-genome"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-align-to-a-reference-genome"}},[t._v("#")]),t._v(" 4. Align to a reference genome")]),t._v(" "),r("p",[t._v("The resulting trimmed FASTQ files can be aligned to a reference either in single-end mode for multiplexed samples or paired-end mode. For all modes, the workflow aligns with Bismark with --bowtie2 option. For paired-end or the single-end mode for R1, the workflow uses a directional option with --pbat parameter. For R2, the directional option is turned off.")]),t._v(" "),r("h3",{attrs:{id:"_5-sort-remove-duplicates-and-filter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-sort-remove-duplicates-and-filter"}},[t._v("#")]),t._v(" 5. Sort, remove duplicates and filter")]),t._v(" "),r("p",[t._v("The aligned BAM(s) are scattered and sorted in coordinate order using Picard. Duplicate reads are then removed from the sorted BAM. If a min_map_quality is provided in the input, reads will be filtered accordingly and a BAM produced for all reads above the min_map_quality and a BAM for reads below the min_map_quality.")]),t._v(" "),r("h3",{attrs:{id:"_6-generate-methylation-reports"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-generate-methylation-reports"}},[t._v("#")]),t._v(" 6. Generate methylation reports")]),t._v(" "),r("p",[t._v("Methylation reports are generated using the Bismark at two steps in the workflow: after the removal of duplicates and again after filtering on min_map_quality. The bismark_methylation_extraction function with the -- comprehensive --merge_non_CpG --report options outputs multiple reports which are detailed in the "),r("a",{attrs:{href:"https://www.bioinformatics.babraham.ac.uk/projects/bismark/Bismark_User_Guide.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bismark documentation"),r("OutboundLink")],1),t._v(". These outputs include mbias, splitting, CpG context, and non-CpG context reports.")]),t._v(" "),r("h3",{attrs:{id:"_7-attach-barcodes-merge-bams-add-read-groups-sort-and-index-bams"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-attach-barcodes-merge-bams-add-read-groups-sort-and-index-bams"}},[t._v("#")]),t._v(" 7. Attach barcodes, merge BAMs, add read groups, sort and index BAMs")]),t._v(" "),r("p",[t._v("In the AttachBarcodes task, Picard attaches the barcodes in the R1 uBAM to the aligned, duplicate-removed, and if applicable, filtered, R1 BAM. This produces a tagged_mapped.bam file. Once the barcodes are attached, the MergeBams task uses Samtools to merge the (barcoded if applicable) R1 BAM with the aligned and filtered R2 BAM. Read groups are then attached to the merged BAM file with GATK4 and the BAM is sorted with Picard. The BAM is indexed with Samtools.")]),t._v(" "),r("h3",{attrs:{id:"_8-call-methylated-bases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-call-methylated-bases"}},[t._v("#")]),t._v(" 8. Call methylated bases")]),t._v(" "),r("p",[t._v("Methylated bases are identified using the MethylationTypeCaller task which calls the GATK4 function MethylationTypeCaller. This produces a VCF with methylation calls.")]),t._v(" "),r("h3",{attrs:{id:"_9-compute-coverage-depth"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-compute-coverage-depth"}},[t._v("#")]),t._v(" 9. Compute coverage depth")]),t._v(" "),r("p",[t._v("The ComputeCoverageDepth task uses Samtools to calculate any region in the filtered, sorted BAM with a coverage depth greater than 1. This interval is read in the stdout of the workflow.")]),t._v(" "),r("h1",{attrs:{id:"outputs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),r("p",[t._v("The table below details the pipeline outputs. "),r("strong",[t._v("If using multiplexed samples, the final files will represent reads from multiple cells and the output is not yet split by cell barcode.")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Workflow output Name")]),t._v(" "),r("th",[t._v("Description")]),t._v(" "),r("th",[t._v("Filetype (when applicable)")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("bam_sort_output")]),t._v(" "),r("td",[t._v("Final aligned, filtered, (barcoded), and sorted BAM")]),t._v(" "),r("td",[t._v("BAM")])]),t._v(" "),r("tr",[r("td",[t._v("bam_index_output")]),t._v(" "),r("td",[t._v("Index file for the final BAM")]),t._v(" "),r("td",[t._v("INDEX")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_vcf")]),t._v(" "),r("td",[t._v("VCF file demarcating methylation sites")]),t._v(" "),r("td",[t._v("VCF")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_vcf_index")]),t._v(" "),r("td",[t._v("Index file for the VCF")]),t._v(" "),r("td",[t._v("INDEX")])]),t._v(" "),r("tr",[r("td",[t._v("total_depth_count")]),t._v(" "),r("td",[t._v("Interval demarcated in the stdout file for reads with coverage greater than 1")]),t._v(" "),r("td",[t._v("NA")])]),t._v(" "),r("tr",[r("td",[t._v("mapping_reports")]),t._v(" "),r("td",[t._v("Mapping reports generated by Bismark alignment")]),t._v(" "),r("td",[t._v("Array")])]),t._v(" "),r("tr",[r("td",[t._v("metric_remove_dup_output")]),t._v(" "),r("td",[t._v("Duplication metrics generated by Picard")]),t._v(" "),r("td",[t._v("TXT")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_mbias_report_output")]),t._v(" "),r("td",[t._v("Mbias reports generated by Bismark for the sorted duplicate-removed BAM and the two map quality-filtered BAMs (reads above map quality and reads below map quality)")]),t._v(" "),r("td",[t._v("TXT")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_splitting_report_output")]),t._v(" "),r("td",[t._v("Splitting reports generated by Bismark for the sorted duplicate-removed BAM and the two map quality-filtered BAMs (reads above map quality and reads below map quality)")]),t._v(" "),r("td",[t._v("TXT")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_CpG_context_report_output")]),t._v(" "),r("td",[t._v("CpG context reports generated by Bismark for the sorted duplicate-removed BAM and the two map quality-filtered BAMs (reads above map quality and reads below map quality)")]),t._v(" "),r("td",[t._v("TXT")])]),t._v(" "),r("tr",[r("td",[t._v("methylation_non_CpG_context_report_output")]),t._v(" "),r("td",[t._v("Non-CpG context reports generated by Bismark for the sorted duplicate-removed BAM and the two map quality-filtered BAMs (reads above map quality and reads below map quality)")]),t._v(" "),r("td",[t._v("TXT")])])])]),t._v(" "),r("h2",{attrs:{id:"versioning"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#versioning"}},[t._v("#")]),t._v(" Versioning")]),t._v(" "),r("p",[t._v("All CEMBA pipeline releases are documented in the "),r("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/cemba/cemba_methylcseq/CEMBA.changelog.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("CEMBA changelog"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"have-suggestions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#have-suggestions"}},[t._v("#")]),t._v(" Have Suggestions?")]),t._v(" "),r("p",[t._v("Coming soon, we will have a GitHub document dedicated to open issues! In the meantime, please help us make our tools better by contacting "),r("a",{attrs:{href:"mailto:kdegatano@broadinstitute.org"}},[t._v("Kylee Degatano")]),t._v(" for pipeline-related suggestions or questions.")])])}),[],!1,null,null,null);e.default=i.exports}}]);