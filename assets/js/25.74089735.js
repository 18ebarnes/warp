(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{403:function(e,a,t){"use strict";t.r(a);var i=t(19),n=Object(i.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vcf-overview-illumina-genotyping-array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vcf-overview-illumina-genotyping-array"}},[e._v("#")]),e._v(" VCF Overview: Illumina Genotyping Array")]),e._v(" "),t("p",[e._v("The "),t("a",{attrs:{href:"https://github.com/broadinstitute/warp/blob/develop/pipelines/broad/genotyping/illumina/IlluminaGenotypingArray.wdl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Illumina Genotyping Array Pipeline"),t("OutboundLink")],1),e._v(" v1.11.0 pipeline produces a VCF (Variant Call Format) output with data processing and sample-specific genotype information. The VCF follows the format listed in the "),t("a",{attrs:{href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("VCF 4.2 specification"),t("OutboundLink")],1),e._v(", but additionally contains fields and attributes that are unique to the Arrays pipeline.")]),e._v(" "),t("p",[e._v("This document describes the Array pipeline’s unique VCF fields and attributes that are not listed in the standard VCF specification. To learn more about the pipeline, see the "),t("RouterLink",{attrs:{to:"/documentation/Pipelines/Illumina_Genotyping_Arrays_Pipeline/IlluminaGenotypingArray.documentation.html"}},[e._v("Illumina Genotyping Array Pipeline Overview")]),e._v(".")],1),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("How do I view a VCF file?")]),e._v(" "),t("p",[e._v("A VCF is a tab delimited text file that you can open with either a text editor or with a spreadsheet editor (like Microsoft Excel).")])]),e._v(" "),t("h2",{attrs:{id:"meta-information-fields"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#meta-information-fields"}},[e._v("#")]),e._v(" Meta information fields")]),e._v(" "),t("p",[e._v("Each VCF has meta information fields with attributes that generally describe the processing of the sample in the array.")]),e._v(" "),t("ul",[t("li",[e._v("arrayType - Name of the genotyping array that was processed.")]),e._v(" "),t("li",[e._v("autocallDate - Date that the genotyping array was processed by ‘autocall’ (aka gencall), the Illumina genotype calling software")]),e._v(" "),t("li",[e._v("autocallGender - Gender (sex) that autocall determined for the sample processed")]),e._v(" "),t("li",[e._v("autocallVersion - Version of the autocall/gencall software used")]),e._v(" "),t("li",[e._v("chipWellBarcode - Chip well barcode (a unique identifier for sample as processed on a specific location on the Illumina genotyping array)")]),e._v(" "),t("li",[e._v("clusterFile - Cluster file used")]),e._v(" "),t("li",[e._v("extendedIlluminaManifestVersion - Version of the ‘extended Illumina manifest’ used by the VCF - generation software.")]),e._v(" "),t("li",[e._v("extendedManifestFile - File name of the ‘extended Illumina manifest’ used by the VCF generation software")]),e._v(" "),t("li",[e._v("fingerprintGender - Gender (sex) determined using an orthogonal fingerprinting technology, populated by an optional parameter used by the VCF generation software")]),e._v(" "),t("li",[e._v("gtcCallRate - GTC call rate of the sample processed that is generated by the autocall/gencall software and represents the fraction of callable loci that had valid calls")]),e._v(" "),t("li",[e._v("imagingDate - Creation date for the chip well barcode IDATs (raw image scans)")]),e._v(" "),t("li",[e._v("manifestFile - Name of the Illumina manifest (.bpm) file used by the VCF generation software")]),e._v(" "),t("li",[e._v("sampleAlias - Sample name")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Illumina-specific meta information")]),e._v(" "),t("p",[e._v("In addition to the above attributes, there are several attributes specific to Illumina control values that are not described here: Biotin, DNP, Extension, Hyb, NP, NSB, Restore, String, TargetRemoval.")])]),e._v(" "),t("h2",{attrs:{id:"header-line-columns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#header-line-columns"}},[e._v("#")]),e._v(" Header line columns")]),e._v(" "),t("p",[e._v("Following the meta-information, there are 8 standard header line columns:")]),e._v(" "),t("ol",[t("li",[e._v("#CHROM")]),e._v(" "),t("li",[e._v("POS")]),e._v(" "),t("li",[e._v("ID")]),e._v(" "),t("li",[e._v("REF")]),e._v(" "),t("li",[e._v("ALT")]),e._v(" "),t("li",[e._v("QUAL")]),e._v(" "),t("li",[e._v("FILTER")]),e._v(" "),t("li",[e._v("INFO")])]),e._v(" "),t("p",[e._v("These columns are standard to each VCF, but the Illumina Genotyping Array Pipeline has an additional FORMAT column. Pipeline-specific column attributes are described below:")]),e._v(" "),t("h3",{attrs:{id:"filter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[e._v("#")]),e._v(" FILTER")]),e._v(" "),t("ul",[t("li",[e._v("DUPE - Filter applied if there are multiple rows in the VCF for the same loci and alleles. For example, if there are two or more rows that share the same chromosome, position, ref allele and alternate alleles, all but one of them will have the ‘DUPE’ filter set")]),e._v(" "),t("li",[e._v("TRIALLELIC - Filter applied if there is a site at which there are two alternate alleles and neither of them is the same as the reference allele")]),e._v(" "),t("li",[e._v("ZEROED_OUT_ASSAY - Filter applied if the variant at the site was ‘zeroed out’ in the Illumina cluster file; typically applied when the calls at the site are intentionally marked as unusual. Genotypes called for sites that are ‘zeroed out’ will always be no-calls")])]),e._v(" "),t("h3",{attrs:{id:"format-genotype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#format-genotype"}},[e._v("#")]),e._v(" FORMAT (genotype)")]),e._v(" "),t("ul",[t("li",[e._v("GT - GENOTYPE; standard field described in the "),t("a",{attrs:{href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("VCF specification"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("IGC - Illumina GenCall Confidence Score. Measure of the call confidence")]),e._v(" "),t("li",[e._v("X - Raw X intensity as scanned from the original genotyping array")]),e._v(" "),t("li",[e._v("Y - Raw Y intensity as scanned from the original genotyping array")]),e._v(" "),t("li",[e._v("NORMX - Normalized X intensity")]),e._v(" "),t("li",[e._v("NORMY - Normalized Y intensity")]),e._v(" "),t("li",[e._v("R - Normalized R Value (one of the polar coordinates after the transformation of NORMX and NORMY)")]),e._v(" "),t("li",[e._v("THETA - Normalized Theta value (one of the polar coordinates after the transformation of NORMX and NORMY)")]),e._v(" "),t("li",[e._v("LRR - Log R Ratio")]),e._v(" "),t("li",[e._v("BAF - B Allele Frequency")])]),e._v(" "),t("h3",{attrs:{id:"info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#info"}},[e._v("#")]),e._v(" INFO")]),e._v(" "),t("p",[e._v("This column contains attributes specific to the array's probe.")]),e._v(" "),t("ul",[t("li",[e._v("AC - Allele Count in genotypes for each ALT allele; standard field in the VCF specification")]),e._v(" "),t("li",[e._v("AF - Allele Frequency; standard field in the VCF specification")]),e._v(" "),t("li",[e._v("AN - Allele Number; standard field in the VCF specification")]),e._v(" "),t("li",[e._v("ALLELE_A - Allele A as annotated in the Illumina manifest (a *suffix indicates this is the reference allele)")]),e._v(" "),t("li",[e._v("ALLELE_B - Allele B as annotated in the Illumina manifest (a *suffix indicates this is the reference allele)")]),e._v(" "),t("li",[e._v("BEADSET_ID - BeadSet ID; an Illumina identifier used for normalization")]),e._v(" "),t("li",[e._v("GC_SCORE - Illumina GenTrain Score; a quality score describing the probe design")]),e._v(" "),t("li",[e._v("ILLUMINA_BUILD - Genome Build for the design probe sequence, as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("ILLUMINA_CHR - Chromosome of the design probe sequence as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("ILLUMINA_POS - Position of the design probe sequence (on ILLUMINA_CHR) as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("ILLUMINA_STRAND - Strand for the design probe sequence as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("PROBE_A - Allele A probe sequence as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("PROBE_B - Allele B probe sequence as annotated in the Illumina manifest; only present on strand ambiguous SNPs")]),e._v(" "),t("li",[e._v("SOURCE - Probe source as annotated in the Illumina manifest")]),e._v(" "),t("li",[e._v("refSNP - dbSNP rsId for this probe")])]),e._v(" "),t("p",[e._v("The remaining attributes describe the cluster definitions provided in the cluster file used for calling the genotype for a SNP.")]),e._v(" "),t("ul",[t("li",[e._v("N_AA - Number of AA calls in training set")]),e._v(" "),t("li",[e._v("N_AB - Number of AB calls in training set")]),e._v(" "),t("li",[e._v("N_BB - Number of BB calls in training set")]),e._v(" "),t("li",[e._v("devR_AA - Standard deviation of normalized R for AA cluster")]),e._v(" "),t("li",[e._v("devR_AB - Standard deviation of normalized R for AB cluster")]),e._v(" "),t("li",[e._v("devR_BB - Standard deviation of normalized R for BB cluster")]),e._v(" "),t("li",[e._v("devTHETA_AA - Standard deviation of normalized THETA for AA cluster")]),e._v(" "),t("li",[e._v("devTHETA_AB - Standard deviation of normalized THETA for AB cluster")]),e._v(" "),t("li",[e._v("devTHETA_BB - Standard deviation of normalized THETA for BB cluster")]),e._v(" "),t("li",[e._v("devX_AA - Standard deviation of normalized X for AA cluster")]),e._v(" "),t("li",[e._v("devX_AB - Standard deviation of normalized X for AB cluster")]),e._v(" "),t("li",[e._v("devX_BB - Standard deviation of normalized X for BB cluster")]),e._v(" "),t("li",[e._v("devY_AA - Standard deviation of normalized Y for AA cluster")]),e._v(" "),t("li",[e._v("devY_AB - Standard deviation of normalized Y for AB cluster")]),e._v(" "),t("li",[e._v("devY_BB - Standard deviation of normalized Y for BB cluster")]),e._v(" "),t("li",[e._v("meanR_AA - Mean of normalized R for AA cluster")]),e._v(" "),t("li",[e._v("meanR_AB - Mean of normalized R for AB cluster")]),e._v(" "),t("li",[e._v("meanR_BB - Mean of normalized R for BB cluster")]),e._v(" "),t("li",[e._v("meanTHETA_AA - Mean of normalized THETA for AA cluster")]),e._v(" "),t("li",[e._v("meanTHETA_AB - Mean of normalized THETA for AB cluster")]),e._v(" "),t("li",[e._v("meanTHETA_BB - Mean of normalized THETA for BB cluster")]),e._v(" "),t("li",[e._v("meanX_AA - Mean of normalized X for AA cluster")]),e._v(" "),t("li",[e._v("meanX_AB - Mean of normalized X for AB cluster")]),e._v(" "),t("li",[e._v("meanX_BB - Mean of normalized X for BB cluster")]),e._v(" "),t("li",[e._v("meanY_AA - Mean of normalized Y for AA cluster")]),e._v(" "),t("li",[e._v("meanY_AB - Mean of normalized Y for AB cluster")]),e._v(" "),t("li",[e._v("meanY_BB - Mean of normalized Y for BB cluster")])])])}),[],!1,null,null,null);a.default=n.exports}}]);